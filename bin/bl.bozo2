#!/bin/sh


__null__ () { echo FUNCTION __null__ was called. [$*]; _dump FN_NULL ; }
__help__ () { echo FUNCTION __help__ was called. [$*]; _dump FN_HELP ; }
__bad__  () { echo FUNCTION __bad__  was called. [$*]; _dump FN_BAD  ; }
_dunder  () { [ -f $s.$1 ] && { $d $s.$1 $c $a; } || { $1 $c $a; } ; }
__main__ () {
    [ ! -z $d ] && { $d $t $a ; return $? ; }
    [ -x $t   ] && { $d $t $a ; return $? ; }
    echo "Cannot execute [$b $c]. Did you mean [. $b $c]?"
    return 99
}

_main () {
    local s=${SELF}
    local d=${SOURCED}
    local b=$(basename ${SELF})
    local c=${1} ; shift  # command
    local a=${*}          # args
    local t=              # target
    local f=              # dunder
    [ -f $s.$c          ] && t=$s.$c
    [ -f $s.$c/__main__ ] && t=$s.$c/__main__
    [ -f "$t"           ] && { _dunder __main__ ; return $?; }
    [ "$c" = ""         ] && { _dunder __null__ ; return $? ; }
    [ "$c" = "-h"       ] && { _dunder __help__ ; return $? ; }
    [ "$c" = "--help"   ] && { _dunder __help__ ; return $? ; }
    [ . = .             ] && { _dunder __bad__  ; return $? ; }
}
SELF="${BLESSED_BOZO_BIN}/bl.bozo"
[ $(dirname $0) = . ] && SOURCED=. || SOURCED=

_main $*
